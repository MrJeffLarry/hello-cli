name: Build release

on:
  push:
    # paths:
    # - '*.md'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - run: |
          chmod +x ./script/*.sh

      - name: Update site files
        run: |
          ./script/site.sh

      - uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: out
          output_dir: site/
          table_of_contents: true
          # images_dir: docs/images
          # for example <img src="./images/file-name.png">
          # image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: true
          build_pdf: false

      # - uses: ZacJW/markdown-html-action@1.1.0
      #   with:
      #     input_files: '["_out/*.md"]'
      #     output_files: '["site/index.html"]'
      #     # builtin_stylesheet: 'style.css'
      #     # packages: 'pymdown-extensions'
      #     extensions: '["pymdownx.extra"]'
      
      - run: |
          ls -la
          ls -la site
          ls -la out
      
      - name: Upload artifact out
        id: upload-artifact-out
        uses: actions/upload-artifact@v4
        with:
          name: hello-cli-out
          path: out
          retention-days: 1

      - name: Upload artifact site
        id: upload-artifact-site
        uses: actions/upload-artifact@v4
        with:
          name: hello-cli-site
          path: site
          retention-days: 1

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Adding summary
        run: |
          echo ':rocket:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'curl -sfLo /etc/apt.trusted.gpg.d/${{ needs.build.outputs.keyring }}.asc ${{ steps.deploy-pages.outputs.page_url }}gpg.key' >> $GITHUB_STEP_SUMMARY
          echo 'echo "deb ${{ steps.deploy-pages.outputs.page_url }} ${{ env.CODENAME }} ${{ env.COMPONENTS }}" >/etc/apt/sources.list.d/${{ env.REPO_NAME }}.list' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
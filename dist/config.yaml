version: 2
project_name: hello-cli
release:
  github:
    owner: MrJeffLarry
    name: hello-cli
  prerelease: auto
  name_template: v{{.Version}}
  mode: keep-existing
homebrew_casks:
  - name: hello-cli
    repository:
      owner: mrjefflarry
      name: hello-cli
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Brew cask update for {{ .ProjectName }} version {{ .Tag }}
    directory: Casks
    description: Hello CLI
    homepage: https://github.com/mrjefflarry/hello-cli
    binary: hello-cli
    hooks:
      post:
        install: |-
          if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
            # replace 'hello-cli' with the actual binary name
            system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/hello-cli"]
          end
scoops:
  - name: hello-cli
    repository:
      owner: mrjefflarry
      name: hello-cli
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
    homepage: https://github.com/mrjefflarry/hello-cli
    description: Hello CLI
    goamd64: v1
builds:
  - id: macos
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - darwin_amd64_v1
      - darwin_arm64_v8.0
    dir: .
    main: ./cmd/hello
    binary: hello-cli
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{time "2006-01-02"}}
  - id: linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - "386"
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_amd64_v1
      - linux_arm64_v8.0
      - linux_386_sse2
    dir: .
    main: ./cmd/hello
    binary: hello-cli
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{time "2006-01-02"}}
    env:
      - CGO_ENABLED=0
  - id: windows
    goos:
      - windows
    goarch:
      - amd64
      - arm64
      - "386"
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - windows_amd64_v1
      - windows_arm64_v8.0
      - windows_386_sse2
    dir: .
    main: ./cmd/hello
    binary: hello-cli
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{time "2006-01-02"}}
archives:
  - id: hello-cli
    ids:
      - macos
      - linux
      - windows
    builds_info:
      mode: 493
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    formats:
      - tar.gz
    files:
      - src: README.md
      - src: LICENSE
nfpms:
  - file_name_template: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    package_name: hello-cli
    recommends:
      - less
      - nano
    id: default
    formats:
      - deb
      - rpm
      - archlinux
    vendor: mrjefflarry
    homepage: https://github.com/mrjefflarry/hello-cli
    maintainer: Jeff HÃ¤german
    description: Hello CLI for interacting with Hello Servers
    license: MIT
    bindir: /usr/bin
    libdirs:
      header: /usr/include
      carchive: /usr/lib
      cshared: /usr/lib
snapshot:
  version_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^build:'
  sort: desc
  format: '{{ .SHA }} {{ .Message }}'
dist: dist
signs:
  - id: default
    cmd: gpg
    args:
      - --batch
      - --pinentry-mode
      - loopback
      - --passphrase
      - '{{ .Env.GPG_PASSPHRASE }}'
      - -u
      - '{{ .Env.GPG_FINGERPRINT }}'
      - --output
      - ${signature}
      - --detach-sign
      - ${artifact}
    signature: ${artifact}.sig
    artifacts: all
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go generate ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
    expected_status_codes:
      - 200
      - 201
      - 202
      - 204
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
universal_binaries:
  - id: hello-cli
    ids:
      - hello-cli
    name_template: hello-cli
    replace: true
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
brews:
  - name: hello-cli
    repository:
      owner: mrjefflarry
      name: hello-cli
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Brew formula update for {{ .ProjectName }} version {{ .Tag }}
    install: bin.install "hello-cli"
    test: |
      system "#{bin}/hello-cli -v"
    description: Hello CLI
    homepage: https://github.com/mrjefflarry/hello-cli
    goarm: "6"
    goamd64: v1
